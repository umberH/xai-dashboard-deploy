{
  "iteration_info": {
    "iteration_number": 155,
    "timestamp": "2025-08-22T13:56:27.291725",
    "iteration_key": "breast_cancer_mlp_bayesian_rule_list",
    "filename": "iteration_0155_20250822_135627.json",
    "folder_path": "results\\experiment_20250822_110046\\iterations\\iterations\\breast\\cancer\\mlp_bayesian_rule_list"
  },
  "experiment_info": {
    "config": {
      "data": {
        "tabular_datasets": [
          {
            "name": "adult_income",
            "source": "uci",
            "description": "Adult Income (UCI) - Binary classification, well-known interpretable baseline dataset",
            "mandatory": true
          },
          {
            "name": "compas",
            "source": "custom",
            "description": "COMPAS - Binary classification, real-world socially sensitive dataset",
            "mandatory": true
          },
          {
            "name": "breast_cancer",
            "source": "sklearn",
            "description": "Breast Cancer Wisconsin - Binary medical diagnosis dataset",
            "mandatory": true
          },
          {
            "name": "heart_disease",
            "source": "uci",
            "description": "Heart Disease UCI - Binary medical classification with mixed feature types",
            "mandatory": true
          },
          {
            "name": "german_credit",
            "source": "uci",
            "description": "German Credit Risk - Binary financial fairness dataset",
            "mandatory": true
          },
          {
            "name": "iris",
            "source": "sklearn",
            "description": "Iris flower classification - 3-class botanical dataset",
            "mandatory": true
          },
          {
            "name": "wine_quality",
            "source": "uci",
            "description": "Wine Quality - 3-class quality prediction (low/medium/high)",
            "mandatory": true
          },
          {
            "name": "diabetes",
            "source": "sklearn",
            "description": "Diabetes progression - 3-class medical dataset",
            "mandatory": true
          },
          {
            "name": "wine_classification",
            "source": "sklearn",
            "description": "Wine classification - 3-class wine origin dataset",
            "mandatory": true
          },
          {
            "name": "digits",
            "source": "sklearn",
            "description": "Digits classification - 10-class handwritten digit recognition (8x8 tabular)",
            "mandatory": true
          },
          {
            "name": "synthetic_tabular",
            "source": "sklearn",
            "description": "Synthetic Tabular with Known Ground Truth - Test explanation accuracy",
            "mandatory": false
          }
        ],
        "image_datasets": [
          {
            "name": "mnist",
            "source": "torchvision",
            "description": "MNIST - 10-class digit classification, standard grayscale images",
            "mandatory": true
          },
          {
            "name": "cifar10",
            "source": "torchvision",
            "description": "CIFAR-10 - 10-class color image classification dataset",
            "mandatory": true
          },
          {
            "name": "fashion_mnist",
            "source": "torchvision",
            "description": "Fashion-MNIST - 10-class clothing classification, complex grayscale patterns",
            "mandatory": true
          },
          {
            "name": "cifar100",
            "source": "torchvision",
            "description": "CIFAR-100 - Fine-grained classification with 100 classes",
            "mandatory": false
          },
          {
            "name": "imagenette",
            "source": "custom",
            "description": "ImageNette - Real-world images, 10 classes from ImageNet",
            "mandatory": false
          },
          {
            "name": "chest_xray",
            "source": "custom",
            "description": "ChestX-ray subset - Medical imaging for high-stakes explanation testing",
            "mandatory": false
          }
        ],
        "text_datasets": [
          {
            "name": "imdb",
            "source": "huggingface",
            "description": "IMDB Movie Reviews - Binary sentiment classification, common NLP task",
            "mandatory": true
          },
          {
            "name": "20newsgroups",
            "source": "sklearn",
            "description": "20 Newsgroups - 4-class news article classification dataset",
            "mandatory": true
          },
          {
            "name": "ag_news",
            "source": "huggingface",
            "description": "AG News - 4-class news categorization dataset",
            "mandatory": true
          },
          {
            "name": "yelp_reviews",
            "source": "huggingface",
            "description": "Yelp Reviews - 5-class sentiment analysis (1-5 stars)",
            "mandatory": false
          },
          {
            "name": "reuters21578",
            "source": "custom",
            "description": "Reuters-21578 - Multi-label news classification",
            "mandatory": false
          }
        ]
      },
      "validation": {
        "class_imbalance_ratio": 0.2,
        "min_dataset_size": 100,
        "min_test_size": 10,
        "max_missing_ratio": 0.3,
        "outlier_threshold": 3.0,
        "feature_correlation_threshold": 0.95,
        "min_features": 2,
        "max_features": 1000,
        "max_skewness": 3.0,
        "max_outlier_ratio": 0.1
      },
      "hyperparameter_tuning": {
        "cv_folds": 5,
        "scoring": "accuracy",
        "n_jobs": -1,
        "verbose": 1,
        "optimization_method": "grid_search",
        "n_trials": 100,
        "timeout": 3600,
        "save_best_params": true,
        "save_all_results": true,
        "parameter_grids": {
          "decision_tree": {
            "max_depth": [
              3,
              5,
              7,
              10,
              "None"
            ],
            "min_samples_split": [
              2,
              5,
              10
            ],
            "min_samples_leaf": [
              1,
              2,
              4
            ],
            "criterion": [
              "gini",
              "entropy"
            ]
          },
          "random_forest": {
            "n_estimators": [
              50,
              100,
              200
            ],
            "max_depth": [
              5,
              10,
              15,
              "None"
            ],
            "min_samples_split": [
              2,
              5,
              10
            ],
            "max_features": [
              "sqrt",
              "log2",
              "None"
            ]
          },
          "gradient_boosting": {
            "n_estimators": [
              50,
              100,
              200
            ],
            "learning_rate": [
              0.01,
              0.1,
              0.2
            ],
            "max_depth": [
              3,
              5,
              7
            ],
            "subsample": [
              0.8,
              0.9,
              1.0
            ]
          },
          "mlp": {
            "hidden_layer_sizes": [
              "(50",
              ")",
              "(100",
              ")",
              "(50",
              "50)"
            ],
            "activation": [
              "relu",
              "tanh"
            ],
            "alpha": [
              0.0001,
              0.001,
              0.01
            ],
            "max_iter": [
              500,
              1000
            ]
          },
          "linear_regression": {
            "fit_intercept": [
              true,
              false
            ],
            "copy_X": [
              true
            ],
            "n_jobs": [
              null,
              -1
            ]
          },
          "logistic_regression": {
            "penalty": [
              "l1",
              "l2",
              "elasticnet"
            ],
            "C": [
              0.01,
              0.1,
              1.0,
              10.0
            ],
            "solver": [
              "liblinear",
              "lbfgs",
              "saga"
            ],
            "max_iter": [
              100,
              500,
              1000
            ]
          },
          "resnet": {
            "variant": [
              "resnet18",
              "resnet34",
              "resnet50"
            ],
            "pretrained": [
              true,
              false
            ],
            "learning_rate": [
              0.001,
              0.01,
              0.1
            ],
            "batch_size": [
              16,
              32,
              64
            ]
          },
          "roberta": {
            "learning_rate": [
              "1e-5",
              "2e-5",
              "5e-5"
            ],
            "batch_size": [
              8,
              16,
              32
            ],
            "max_length": [
              128,
              256,
              512
            ],
            "epochs": [
              2,
              3,
              4
            ]
          },
          "naive_bayes_text": {
            "alpha": [
              0.1,
              0.5,
              1.0,
              2.0
            ],
            "fit_prior": [
              true,
              false
            ]
          },
          "svm_text": {
            "C": [
              0.1,
              1.0,
              10.0,
              100.0
            ],
            "kernel": [
              "linear",
              "rbf",
              "poly"
            ],
            "gamma": [
              "scale",
              "auto",
              0.001,
              0.01
            ]
          },
          "xgboost_text": {
            "n_estimators": [
              50,
              100,
              200,
              300
            ],
            "max_depth": [
              3,
              5,
              7,
              9
            ],
            "learning_rate": [
              0.01,
              0.1,
              0.2,
              0.3
            ],
            "subsample": [
              0.8,
              0.9,
              1.0
            ]
          }
        }
      },
      "models": {
        "models_to_train": [
          "decision_tree",
          "random_forest",
          "gradient_boosting",
          "mlp",
          "linear_regression",
          "logistic_regression",
          "cnn",
          "vit",
          "resnet",
          "bert",
          "lstm",
          "roberta",
          "naive_bayes_text",
          "svm_text",
          "xgboost_text"
        ],
        "tabular": [
          {
            "name": "decision_tree",
            "description": "Decision Tree Classifier",
            "library": "sklearn"
          },
          {
            "name": "random_forest",
            "description": "Random Forest Classifier",
            "library": "sklearn"
          },
          {
            "name": "gradient_boosting",
            "description": "Gradient Boosting Classifier",
            "library": "sklearn"
          },
          {
            "name": "mlp",
            "description": "Multi-layer Perceptron",
            "library": "sklearn"
          },
          {
            "name": "linear_regression",
            "description": "Linear Regression (with classification adaptation)",
            "library": "sklearn"
          },
          {
            "name": "logistic_regression",
            "description": "Logistic Regression",
            "library": "sklearn"
          }
        ],
        "image": [
          {
            "name": "cnn",
            "description": "Convolutional Neural Network",
            "library": "pytorch"
          },
          {
            "name": "vit",
            "description": "Vision Transformer",
            "library": "pytorch"
          },
          {
            "name": "resnet",
            "description": "Residual Neural Network",
            "library": "pytorch"
          }
        ],
        "text": [
          {
            "name": "bert",
            "description": "BERT-based classifier (simplified)",
            "library": "sklearn"
          },
          {
            "name": "lstm",
            "description": "LSTM-based classifier (simplified)",
            "library": "sklearn"
          },
          {
            "name": "roberta",
            "description": "RoBERTa-based classifier",
            "library": "transformers"
          },
          {
            "name": "naive_bayes_text",
            "description": "Naive Bayes for text classification",
            "library": "sklearn"
          },
          {
            "name": "svm_text",
            "description": "SVM for text classification",
            "library": "sklearn"
          },
          {
            "name": "xgboost_text",
            "description": "XGBoost for text classification",
            "library": "xgboost"
          }
        ]
      },
      "explanations": {
        "feature_attribution": [
          {
            "name": "shap",
            "description": "SHAP (SHapley Additive exPlanations)",
            "library": "shap"
          },
          {
            "name": "lime",
            "description": "LIME (Local Interpretable Model-agnostic Explanations)",
            "library": "lime"
          },
          {
            "name": "integrated_gradients",
            "description": "Integrated Gradients",
            "library": "captum"
          },
          {
            "name": "causal_shap",
            "description": "Causal SHAP - SHAP values with causal structure consideration",
            "library": "custom",
            "data_types": [
              "tabular"
            ]
          },
          {
            "name": "shapley_flow",
            "description": "Shapley Flow - tracks value propagation through model layers",
            "library": "custom",
            "data_types": [
              "tabular",
              "image"
            ]
          },
          {
            "name": "shap_interactive",
            "description": "SHAP Interactive - includes main effects and pairwise interactions",
            "library": "custom",
            "data_types": [
              "tabular"
            ]
          }
        ],
        "example_based": [
          {
            "name": "prototype",
            "description": "Prototype-based explanations",
            "library": "custom"
          },
          {
            "name": "counterfactual",
            "description": "Counterfactual explanations",
            "library": "alibi"
          },
          {
            "name": "influence_functions",
            "description": "Influence Functions - identifies training examples affecting predictions",
            "library": "custom",
            "data_types": [
              "tabular",
              "image",
              "text"
            ]
          }
        ],
        "concept_based": [
          {
            "name": "tcav",
            "description": "TCAV (Testing with Concept Activation Vectors)",
            "library": "custom"
          },
          {
            "name": "concept_bottleneck",
            "description": "Concept Bottleneck Models",
            "library": "custom"
          },
          {
            "name": "bayesian_rule_list",
            "description": "Bayesian Rule Lists - interpretable if-then rules with posteriors",
            "library": "custom",
            "data_types": [
              "tabular"
            ]
          },
          {
            "name": "corels",
            "description": "CORELS - certifiably optimal rule lists",
            "library": "custom",
            "data_types": [
              "tabular"
            ]
          }
        ],
        "perturbation": [
          {
            "name": "occlusion",
            "description": "Occlusion-based explanations",
            "library": "captum"
          },
          {
            "name": "feature_ablation",
            "description": "Feature ablation explanations",
            "library": "captum"
          }
        ]
      },
      "evaluation": {
        "fidelity": [
          {
            "name": "faithfulness",
            "description": "How well explanations reflect model behavior"
          },
          {
            "name": "monotonicity",
            "description": "Consistency of explanation with model predictions"
          },
          {
            "name": "completeness",
            "description": "Coverage of explanation across features"
          }
        ],
        "time_complexity": [
          {
            "name": "explanation_time",
            "description": "Time taken to generate explanations"
          },
          {
            "name": "training_time",
            "description": "Time taken to train the model"
          }
        ],
        "stability": [
          {
            "name": "consistency",
            "description": "Consistency of explanations across similar inputs"
          },
          {
            "name": "robustness",
            "description": "Robustness to small input perturbations"
          }
        ],
        "comprehensibility": [
          {
            "name": "sparsity",
            "description": "Sparsity of explanations"
          },
          {
            "name": "simplicity",
            "description": "Simplicity of explanation structure"
          }
        ]
      },
      "experiment": {
        "preprocessing": {
          "test_size": 0.2,
          "random_state": 42,
          "scale_features": true,
          "handle_missing": true
        },
        "data_splitting": {
          "default_strategy": "stratified",
          "test_size": 0.2,
          "validation_size": 0.1,
          "random_state": 42,
          "stratify": true,
          "shuffle": true,
          "n_splits": 5,
          "n_repeats": 3,
          "time_column": null,
          "gap": 0,
          "group_column": null,
          "min_samples_per_class": 2,
          "max_imbalance_ratio": 0.3,
          "strategies": {
            "stratified": {
              "description": "Maintains class distribution across splits",
              "supports_validation": true,
              "supports_cv": true
            },
            "time_based": {
              "description": "Time-based splits for temporal data",
              "supports_validation": false,
              "supports_cv": false,
              "requires_time_column": true
            },
            "cross_validation": {
              "description": "K-fold cross-validation",
              "supports_validation": false,
              "supports_cv": true,
              "cv_types": [
                "stratified_kfold",
                "kfold",
                "leave_one_out",
                "stratified_shuffle_split"
              ]
            },
            "group_based": {
              "description": "Group-based splits (e.g., by patient, subject)",
              "supports_validation": false,
              "supports_cv": false,
              "requires_group_column": true
            },
            "custom": {
              "description": "Custom split strategies",
              "supports_validation": true,
              "supports_cv": true
            },
            "holdout": {
              "description": "Simple holdout split",
              "supports_validation": true,
              "supports_cv": false
            }
          }
        },
        "training": {
          "max_iter": 1000,
          "early_stopping": true,
          "validation_split": 0.1
        },
        "explanation": {
          "num_samples": 100,
          "max_features": 10,
          "random_state": 42
        },
        "evaluation": {
          "num_runs": 5,
          "confidence_level": 0.95,
          "significance_level": 0.05,
          "multiple_comparison_correction": "bonferroni",
          "statistical_tests": [
            "t_test",
            "mann_whitney",
            "wilcoxon",
            "anova",
            "kruskal_wallis",
            "friedman"
          ],
          "effect_size_calculation": true,
          "power_analysis": true,
          "correlation_analysis": true
        }
      },
      "output": {
        "results_dir": "results",
        "save_models": true,
        "save_explanations": true,
        "generate_plots": true,
        "save_reports": true
      },
      "logging": {
        "level": "INFO",
        "format": "%(asctime)s - %(name)s - %(levelname)s - %(message)s",
        "file": "benchmark.log"
      }
    },
    "benchmark_timestamp": "2025-08-22 11:00:46"
  },
  "result_data": {
    "dataset": "breast_cancer",
    "dataset_type": "tabular",
    "model": "mlp",
    "model_type": "mlp",
    "explanation_method": "bayesian_rule_list",
    "explanation_type": "bayesian_rule_list",
    "model_performance": {
      "train_accuracy": 1.0,
      "test_accuracy": 0.9473684210526315,
      "train_f1": 1.0,
      "test_f1": 0.9478127136021872,
      "train_precision": 1.0,
      "test_precision": 0.9506663077130165,
      "train_recall": 1.0,
      "test_recall": 0.9473684210526315,
      "overfitting_gap": 0.052631578947368474,
      "overfitting_severity": "low",
      "class_accuracies": [
        0.9761904761904762,
        0.9305555555555556
      ],
      "n_classes": 2,
      "n_train_samples": 455,
      "n_test_samples": 114,
      "training_time": 0.44153833389282227,
      "model_complexity": {
        "n_parameters": 23,
        "model_size_bytes": 48,
        "model_size_mb": 4.57763671875e-05,
        "complexity_level": "simple"
      }
    },
    "explanation_info": {
      "n_explanations": 100,
      "rule_list": [
        {
          "conditions": [
            {
              "feature": "20",
              "operator": "<=",
              "value": 2.5
            },
            {
              "feature": "27",
              "operator": "<=",
              "value": 2.5
            },
            {
              "feature": "20",
              "operator": "<=",
              "value": 1.5
            },
            {
              "feature": "13",
              "operator": "<=",
              "value": 2.5
            },
            {
              "feature": "1",
              "operator": "<=",
              "value": 2.5
            }
          ],
          "prediction": 1,
          "posterior_probability": 0.6478328173374613,
          "accuracy": 1.0,
          "coverage": 0.4197802197802198,
          "support": 1
        },
        {
          "conditions": [
            {
              "feature": "20",
              "operator": ">",
              "value": 2.5
            },
            {
              "feature": "26",
              "operator": ">",
              "value": 0.5
            }
          ],
          "prediction": 0,
          "posterior_probability": 0.6001757469244289,
          "accuracy": 1.0,
          "coverage": 0.25054945054945055,
          "support": 1
        },
        {
          "conditions": [
            {
              "feature": "20",
              "operator": "<=",
              "value": 2.5
            },
            {
              "feature": "27",
              "operator": "<=",
              "value": 2.5
            },
            {
              "feature": "20",
              "operator": ">",
              "value": 1.5
            },
            {
              "feature": "1",
              "operator": "<=",
              "value": 1.5
            },
            {
              "feature": "24",
              "operator": "<=",
              "value": 2.5
            }
          ],
          "prediction": 1,
          "posterior_probability": 0.5404040404040404,
          "accuracy": 1.0,
          "coverage": 0.08791208791208792,
          "support": 1
        },
        {
          "conditions": [
            {
              "feature": "20",
              "operator": "<=",
              "value": 2.5
            },
            {
              "feature": "27",
              "operator": ">",
              "value": 2.5
            },
            {
              "feature": "13",
              "operator": ">",
              "value": 0.5
            }
          ],
          "prediction": 0,
          "posterior_probability": 0.5289855072463768,
          "accuracy": 1.0,
          "coverage": 0.06153846153846154,
          "support": 1
        },
        {
          "conditions": [
            {
              "feature": "20",
              "operator": "<=",
              "value": 2.5
            },
            {
              "feature": "27",
              "operator": "<=",
              "value": 2.5
            },
            {
              "feature": "20",
              "operator": "<=",
              "value": 1.5
            },
            {
              "feature": "13",
              "operator": "<=",
              "value": 2.5
            },
            {
              "feature": "1",
              "operator": ">",
              "value": 2.5
            }
          ],
          "prediction": 1,
          "posterior_probability": 0.5269151138716356,
          "accuracy": 0.9642857142857143,
          "coverage": 0.06153846153846154,
          "support": 1
        },
        {
          "conditions": [
            {
              "feature": "20",
              "operator": "<=",
              "value": 2.5
            },
            {
              "feature": "27",
              "operator": "<=",
              "value": 2.5
            },
            {
              "feature": "20",
              "operator": ">",
              "value": 1.5
            },
            {
              "feature": "1",
              "operator": ">",
              "value": 1.5
            },
            {
              "feature": "24",
              "operator": ">",
              "value": 1.5
            }
          ],
          "prediction": 0,
          "posterior_probability": 0.5128479657387581,
          "accuracy": 1.0,
          "coverage": 0.026373626373626374,
          "support": 1
        },
        {
          "conditions": [
            {
              "feature": "20",
              "operator": "<=",
              "value": 2.5
            },
            {
              "feature": "27",
              "operator": "<=",
              "value": 2.5
            },
            {
              "feature": "20",
              "operator": ">",
              "value": 1.5
            },
            {
              "feature": "1",
              "operator": ">",
              "value": 1.5
            },
            {
              "feature": "24",
              "operator": "<=",
              "value": 1.5
            }
          ],
          "prediction": 1,
          "posterior_probability": 0.5092592592592592,
          "accuracy": 0.6451612903225806,
          "coverage": 0.06813186813186813,
          "support": 1
        },
        {
          "conditions": [
            {
              "feature": "20",
              "operator": "<=",
              "value": 2.5
            },
            {
              "feature": "27",
              "operator": "<=",
              "value": 2.5
            },
            {
              "feature": "20",
              "operator": "<=",
              "value": 1.5
            },
            {
              "feature": "13",
              "operator": ">",
              "value": 2.5
            }
          ],
          "prediction": 1,
          "posterior_probability": 0.5021786492374728,
          "accuracy": 0.75,
          "coverage": 0.008791208791208791,
          "support": 1
        },
        {
          "conditions": [
            {
              "feature": "20",
              "operator": ">",
              "value": 2.5
            },
            {
              "feature": "26",
              "operator": "<=",
              "value": 0.5
            }
          ],
          "prediction": 1,
          "posterior_probability": 0.5010964912280702,
          "accuracy": 1.0,
          "coverage": 0.002197802197802198,
          "support": 1
        },
        {
          "conditions": [
            {
              "feature": "20",
              "operator": "<=",
              "value": 2.5
            },
            {
              "feature": "27",
              "operator": "<=",
              "value": 2.5
            },
            {
              "feature": "20",
              "operator": ">",
              "value": 1.5
            },
            {
              "feature": "1",
              "operator": "<=",
              "value": 1.5
            },
            {
              "feature": "24",
              "operator": ">",
              "value": 2.5
            }
          ],
          "prediction": 0,
          "posterior_probability": 0.5010917030567685,
          "accuracy": 0.6666666666666666,
          "coverage": 0.006593406593406593,
          "support": 1
        }
      ],
      "feature_names": [
        "mean radius",
        "mean texture",
        "mean perimeter",
        "mean area",
        "mean smoothness",
        "mean compactness",
        "mean concavity",
        "mean concave points",
        "mean symmetry",
        "mean fractal dimension",
        "radius error",
        "texture error",
        "perimeter error",
        "area error",
        "smoothness error",
        "compactness error",
        "concavity error",
        "concave points error",
        "symmetry error",
        "fractal dimension error",
        "worst radius",
        "worst texture",
        "worst perimeter",
        "worst area",
        "worst smoothness",
        "worst compactness",
        "worst concavity",
        "worst concave points",
        "worst symmetry",
        "worst fractal dimension"
      ]
    },
    "evaluations": {
      "time_complexity": 0.005158290863037109,
      "faithfulness": 0.0,
      "monotonicity": 0.0,
      "completeness": 0.0,
      "stability": 1,
      "consistency": 0.0,
      "sparsity": 0.0,
      "simplicity": 1.0,
      "advanced_identity": 1.0,
      "advanced_separability": 0.0,
      "advanced_non_sensitivity": 0.5,
      "advanced_compactness": 0.0,
      "advanced_correctness": 0.6580000000000001,
      "advanced_entropy": 0.0,
      "advanced_gini_coefficient": 0.0,
      "advanced_kl_divergence": 0.0
    },
    "detailed_explanations_file": "detailed_explanations\\breast_cancer\\mlp\\bayesian_rule_list_detailed_explanations.json",
    "detailed_explanations_summary": {
      "total_instances": 114,
      "valid_explanations": 114,
      "errors": 0,
      "accuracy": 0.9473684210526315,
      "avg_prediction": 0.5964912280701754,
      "avg_true_label": 0.631578947368421
    },
    "used_tuned_params": false,
    "validation_status": true
  }
}